{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding\\\\project\\\\career-advisory-website\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile as updateFirebaseProfile } from 'firebase/auth';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (firebaseUser) {\n        // User is signed in, get additional user data from Firestore\n        const userDocRef = doc(db, 'users', firebaseUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUser({\n            id: firebaseUser.uid,\n            email: firebaseUser.email || '',\n            name: userData.name || firebaseUser.displayName || '',\n            age: userData.age,\n            academicLevel: userData.academicLevel,\n            location: userData.location,\n            interests: userData.interests || [],\n            strengths: userData.strengths || [],\n            quizCompleted: userData.quizCompleted || false,\n            recommendedStream: userData.recommendedStream\n          });\n        } else {\n          var _firebaseUser$email;\n          // Create user document if it doesn't exist\n          const newUser = {\n            id: firebaseUser.uid,\n            email: firebaseUser.email || '',\n            name: firebaseUser.displayName || ((_firebaseUser$email = firebaseUser.email) === null || _firebaseUser$email === void 0 ? void 0 : _firebaseUser$email.split('@')[0]) || ''\n          };\n          await setDoc(userDocRef, newUser);\n          setUser(newUser);\n        }\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, name) => {\n    setLoading(true);\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const firebaseUser = userCredential.user;\n\n      // Update the user's display name\n      await updateFirebaseProfile(firebaseUser, {\n        displayName: name\n      });\n\n      // Create user document in Firestore\n      const userData = {\n        id: firebaseUser.uid,\n        email: firebaseUser.email || '',\n        name: name\n      };\n      await setDoc(doc(db, 'users', firebaseUser.uid), userData);\n    } catch (error) {\n      throw new Error(error.message || 'Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  const updateProfile = async profileData => {\n    if (user && auth.currentUser) {\n      try {\n        const userDocRef = doc(db, 'users', user.id);\n        await updateDoc(userDocRef, profileData);\n        const updatedUser = {\n          ...user,\n          ...profileData\n        };\n        setUser(updatedUser);\n      } catch (error) {\n        console.error('Profile update error:', error);\n        throw new Error('Failed to update profile');\n      }\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","updateFirebaseProfile","doc","setDoc","getDoc","updateDoc","auth","db","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","unsubscribe","firebaseUser","userDocRef","uid","userDoc","exists","userData","data","id","email","name","displayName","age","academicLevel","location","interests","strengths","quizCompleted","recommendedStream","_firebaseUser$email","newUser","split","login","password","error","message","register","userCredential","logout","console","profileData","currentUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/coding/project/career-advisory-website/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  User as FirebaseUser,\n  updateProfile as updateFirebaseProfile\n} from 'firebase/auth';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  age?: number;\n  academicLevel?: string;\n  location?: string;\n  interests?: string[];\n  strengths?: string[];\n  quizCompleted?: boolean;\n  recommendedStream?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string, name: string) => Promise<void>;\n  logout: () => void;\n  updateProfile: (profileData: Partial<User>) => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser: FirebaseUser | null) => {\n      if (firebaseUser) {\n        // User is signed in, get additional user data from Firestore\n        const userDocRef = doc(db, 'users', firebaseUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        \n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUser({\n            id: firebaseUser.uid,\n            email: firebaseUser.email || '',\n            name: userData.name || firebaseUser.displayName || '',\n            age: userData.age,\n            academicLevel: userData.academicLevel,\n            location: userData.location,\n            interests: userData.interests || [],\n            strengths: userData.strengths || [],\n            quizCompleted: userData.quizCompleted || false,\n            recommendedStream: userData.recommendedStream\n          });\n        } else {\n          // Create user document if it doesn't exist\n          const newUser: User = {\n            id: firebaseUser.uid,\n            email: firebaseUser.email || '',\n            name: firebaseUser.displayName || firebaseUser.email?.split('@')[0] || '',\n          };\n          await setDoc(userDocRef, newUser);\n          setUser(newUser);\n        }\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    setLoading(true);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error: any) {\n      throw new Error(error.message || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (email: string, password: string, name: string): Promise<void> => {\n    setLoading(true);\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const firebaseUser = userCredential.user;\n      \n      // Update the user's display name\n      await updateFirebaseProfile(firebaseUser, { displayName: name });\n      \n      // Create user document in Firestore\n      const userData: User = {\n        id: firebaseUser.uid,\n        email: firebaseUser.email || '',\n        name: name,\n      };\n      \n      await setDoc(doc(db, 'users', firebaseUser.uid), userData);\n    } catch (error: any) {\n      throw new Error(error.message || 'Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const updateProfile = async (profileData: Partial<User>) => {\n    if (user && auth.currentUser) {\n      try {\n        const userDocRef = doc(db, 'users', user.id);\n        await updateDoc(userDocRef, profileData);\n        \n        const updatedUser = { ...user, ...profileData };\n        setUser(updatedUser);\n      } catch (error) {\n        console.error('Profile update error:', error);\n        throw new Error('Failed to update profile');\n      }\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    loading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}